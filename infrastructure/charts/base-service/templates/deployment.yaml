apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "base-service.fullname" . }}
  labels:
    {{- include "base-service.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "base-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "base-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "base-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
          {{ if .Values.isGrpc }}
            - name: grpc
              containerPort: 50051
              protocol: TCP
          {{ else }}
            - name: http
              containerPort: 8080
              protocol: TCP
          {{ end }}
          {{ if .Values.isGrpc }} 
          livenessProbe:
            # ref: https://github.com/grpc-ecosystem/grpc-health-probe 
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
              initialDelaySeconds: 10
          readinessProb:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
              initialDelaySeconds: 10
          {{ else }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          {{ end }} 
          envFrom:
            - configMapRef:
                name: {{ include "base-service.fullname" . }}
          volumeMounts:
          {{- $secretsDir := .Values.secretsDir -}}
          {{- range .Values.secrets }}
            - name: {{ . }}-volume
              readOnly: true
              mountPath: {{ $secretsDir }}/{{ . }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- range .Values.secrets }}
        - name: {{ . }}-volume
          secret:
            secretName: {{ . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
